// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https://zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        dl {
            display-name = "DEF";
            bindings = <
&kp Q  &kp W  &kp E           &kp R                       &kp T             &kp Y             &kp U       &kp I            &kp O             &kp P
&kp A  &kp S  &ht LEFT_ALT D  &ht LGUI F                  &kp G             &kp H             &ht RGUI J  &ht RIGHT_ALT K  &kp L             &kp SEMICOLON
&kp Z  &kp X  &kp C           &kp V                       &kp B             &kp N             &kp M       &kp COMMA        &ht SLASH PERIOD  &kp NON_US_BACKSLASH
                              &ht LC(LS(LEFT_ALT)) SPACE  &kp LEFT_SHIFT    &kp LEFT_CONTROL  &to 1
            >;
        };

        windows_layer {
            display-name = "WIN";
            bindings = <
&kp ESCAPE  &kp AT_SIGN  &kp HASH   &kp DOLLAR    &kp PERCENT          &kp CARET                  &kp AMPERSAND         &kp ASTERISK           &ht MINUS UNDERSCORE  &kp BACKSPACE
&kp TAB     &kp EQUAL    &kp MINUS  &kp PLUS      &kp SQT              &ht HOME NON_US_BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &ht END PIPE          &kp ENTER
&tog 4      &kp MINUS    &kp SLASH  &kp ASTERISK  &kp DOUBLE_QUOTES    &kp LEFT_BRACKET           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET     &to 3
                                    &to 0         &kp LSHIFT           &kp LEFT_ALT               &to 2
            >;
        };

        right_layer {
            display-name = "NUM & NAVIGATION";
            bindings = <
&ht LG(LA(ESCAPE)) ESCAPE  &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &trans             &kp K_BACK         &kp LC(LS(TAB))    &kp LC(TAB)            &kp K_FORWARD        &kp BACKSPACE
&kp DEL                    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &ht LCMD DELETE    &ht LG(LEFT) LEFT  &ht LEFT_GUI DOWN  &ht LEFT_ALT UP_ARROW  &ht LG(RIGHT) RIGHT  &kp RETURN
&kp LEFT_SHIFT             &mkp RCLK       &msc SCRL_UP    &msc SCRL_DOWN   &trans             &mkp LCLK          &ht END PAGE_DOWN  &ht HOME PAGE_UP       &trans               &trans
                                                           &to 0            &kp LCMD           &kp LEFT_ALT       &to 1
            >;
        };

        left_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESCAPE  &kp C_PLAY_PAUSE  &kp C_PREVIOUS        &kp C_NEXT            &kp UNDERSCORE      &kp CARET     &kp N7        &kp N8        &kp N9        &kp BACKSPACE
&kp TAB     &kp SLASH         &kp C_VOL_DN          &kp C_VOLUME_UP       &kp PLUS            &kp FSLH      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER
&sys_reset  &kp ASTERISK      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp PERIOD          &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &tog 2
                                                    &to 0                 &kp LEFT_COMMAND    &kp LEFT_ALT  &to 1
            >;
        };

        tri_layer {
            display-name = "FUNC";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &tog 1          &kp C_MUTE    &kp C_PREV
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &studio_unlock  &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &soft_off       &kp C_VOL_DN  &kp C_NEXT
                          &to 0    &trans          &trans        &to 1
            >;
        };
    };
};
