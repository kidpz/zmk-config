// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https://zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        ht_long: hold_tap_long {
            label = "hold_tap_long";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <20>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Alpha {
            display-name = "DEF";
            bindings = <
&kp Q  &kp W             &kp E                &kp R                 &kp T         &kp Y  &kp U            &kp I                 &kp O             &kp P
&kp A  &ht_long LCTRL S  &ht_long LEFT_ALT D  &ht_long LGUI F       &kp G         &kp H  &ht_long RGUI J  &ht_long RIGHT_ALT K  &ht_long RCTRL L  &ht SQT SEMICOLON
&kp Z  &kp X             &kp C                &kp V                 &kp B         &kp N  &kp M            &kp COMMA             &kp PERIOD        &kp SLASH
                                              &ht LEFT_SHIFT SPACE  &lm 3 LGUI    &to 1  &lt 2 ENTER
            >;
        };

        Math {
            display-name = "123";
            bindings = <
&kp GRAVE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET       &kp MINUS  &kp N7        &kp N8        &kp N9        &kp BACKSPACE
&kp SLASH  &kp ASTERISK      &kp MINUS             &kp PLUS               &kp SQT                 &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
&kp COMMA  &kp SEMICOLON     &kp LESS_THAN         &kp GREATER_THAN       &kp NON_US_BACKSLASH    &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
                                                   &ht LSHIFT SPACE       &kp LC(LS(LEFT_ALT))    &to 0      &lt 2 ENTER
            >;
        };

        Navi.Symbol {
            bindings = <
&kp TAB        &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET    &kp TILDE                &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp ESCAPE           &kp BSPC
&kp LS(EXCL)   &kp LS(AT)        &kp LS(POUND)         &kp LS(DLLR)           &kp LS(PRCNT)        &ht LG(LEFT) LEFT_ARROW  &kp DOWN        &kp UP           &ht LG(RIGHT) RIGHT  &kp LA(BACKSPACE)
&kp LS(CARET)  &kp LS(AMPS)      &kp LS(STAR)          &kp MINUS              &kp EQUAL            &kp LA(LEFT)             &kp PAGE_DOWN   &kp PAGE_UP      &kp LA(RIGHT)        &kp BACKSLASH
                                                       &ht LSHFT SPACE        &mo 4                &kp F5                   &trans
            >;
        };

        Shortcuts {
            bindings = <
&kp TAB            &kp LS(LA(LC(W)))  &kp LS(LA(LC(E)))  &kp LS(LA(LC(R)))  &kp LS(LA(LC(T)))    &kp LS(LC(LA(Y)))  &kp LS(LA(LC(U)))  &kp LS(LA(LC(I)))         &kp LS(LA(LC(O)))         &kp LS(LA(LC(P)))
&kp LS(LA(LC(A)))  &kp LS(LA(LC(S)))  &kp LS(LA(LC(D)))  &kp LS(LA(LC(F)))  &kp LS(LA(LC(G)))    &kp LS(LA(LC(H)))  &kp LS(LA(LC(J)))  &kp LS(LA(LC(K)))         &kp LS(LA(LC(L)))         &kp LS(LA(LC(SEMICOLON)))
&kp LS(LA(LC(Z)))  &kp LS(LA(LC(X)))  &kp LS(LA(LC(C)))  &kp LS(LA(LC(V)))  &kp LS(LA(LC(B)))    &kp LS(LA(LC(N)))  &kp LS(LA(LC(M)))  &kp LS(LA(LC(NUMBER_1)))  &kp LS(LA(LC(NUMBER_2)))  &kp LS(LA(LC(NUMBER_3)))
                                                         &trans             &trans               &trans             &trans
            >;
        };

        BT_Media {
            bindings = <
&bt BT_CLR  &none   &none   &kp F11  &kp F12    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4
&kp F1      &kp F2  &kp F3  &kp F4   &kp F5     &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&kp F6      &kp F7  &kp F8  &kp F9   &kp F10    &none         &none         &none         &none                 &none
                            &none    &none      &none         &none
            >;
        };
    };
};
